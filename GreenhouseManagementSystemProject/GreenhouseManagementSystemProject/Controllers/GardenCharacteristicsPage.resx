<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        hnFy+vT5f4sa3MyL6ZGfAAAAAElFTkSuQmCC
</value>
  </data>
</root>